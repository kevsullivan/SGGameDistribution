/************************************************************/
/*****              SqlDataProvider                     *****/
/*****                                                  *****/
/*****                                                  *****/
/***** Note: To manually execute this script you must   *****/
/*****       perform a search and replace operation     *****/
/*****       for {databaseOwner} and {objectQualifier}  *****/
/*****                                                  *****/
/************************************************************/



IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}SGGameDistribution_Game]') AND type in (N'U'))
BEGIN
	CREATE TABLE {databaseOwner}{objectQualifier}SGGameDistribution_Game
		(
		GameId int NOT NULL IDENTITY (1, 1),
		GameName nvarchar(MAX) NOT NULL,
		GameDescription nvarchar(MAX) NOT NULL,
		DeveloperId int NOT NULL,
		ModuleId int NOT NULL,
		CreatedOnDate datetime NOT NULL,
		ContentItemId int NULL,
		CreatedByUserID int NOT NULL,
		LastModifiedOnDate datetime NOT NULL,
		LastModifiedByUserId int NOT NULL,
		AgeRating int NOT NULL,
		MoreInfo nvarchar(MAX) NOT NULL,
		GameGenre nvarchar(MAX) NOT NULL DEFAULT 'Uncategorized',
		ImageFileName nvarchar(MAX) NOT NULL DEFAULT 'placeholder.png',
		InstallerFileName nvarchar(MAX),
		PayPal nvarchar(MAX) NOT NULL DEFAULT ''
		)  ON [PRIMARY]
		 TEXTIMAGE_ON [PRIMARY]

ALTER TABLE {databaseOwner}{objectQualifier}SGGameDistribution_Game ADD CONSTRAINT
	PK_{objectQualifier}SGGameDistribution_Game PRIMARY KEY CLUSTERED 
	(
	GameId
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

END

IF NOT EXISTS( SELECT * FROM sys.columns WHERE Name = 'GameGenre' AND Object_ID = Object_ID(N'{databaseOwner}{objectQualifier}SGGameDistribution_Game'))
BEGIN
	ALTER TABLE {databaseOwner}{objectQualifier}SGGameDistribution_Game ADD GameGenre nvarchar(MAX) NOT NULL DEFAULT 'Uncategorized'
END

IF NOT EXISTS( SELECT * FROM sys.columns WHERE Name = 'ImageFileName' AND Object_ID = Object_ID(N'{databaseOwner}{objectQualifier}SGGameDistribution_Game'))
BEGIN
	ALTER TABLE {databaseOwner}{objectQualifier}SGGameDistribution_Game ADD ImageFileName nvarchar(MAX) NOT NULL DEFAULT 'placeholder.png'
END

IF NOT EXISTS( SELECT * FROM sys.columns WHERE Name = 'InstallerFileName' AND Object_ID = Object_ID(N'{databaseOwner}{objectQualifier}SGGameDistribution_Game'))
BEGIN
	ALTER TABLE {databaseOwner}{objectQualifier}SGGameDistribution_Game ADD InstallerFileName nvarchar(MAX)
END

IF NOT EXISTS( SELECT * FROM sys.columns WHERE Name = 'PayPal' AND Object_ID = Object_ID(N'{databaseOwner}{objectQualifier}SGGameDistribution_Game'))
BEGIN
	ALTER TABLE {databaseOwner}{objectQualifier}SGGameDistribution_Game ADD PayPal nvarchar(MAX) NOT NULL DEFAULT ''
END

IF EXISTS( SELECT * FROM sys.columns WHERE Name = 'DownloadUrl' AND Object_ID = Object_ID(N'{databaseOwner}{objectQualifier}SGGameDistribution_Game'))
BEGIN
	EXEC sp_RENAME '{databaseOwner}{objectQualifier}SGGameDistribution_Game.DownloadUrl', 'MoreInfo', 'COLUMN'
END

GO


IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'{databaseOwner}[{objectQualifier}SGGameDownloads]') AND type in (N'U'))
BEGIN
CREATE TABLE {databaseOwner}{objectQualifier}SGGameDownloads
	(
	DownloadId int NOT NULL IDENTITY (1, 1),
	GameId int NOT NULL,
	GameName nvarchar(MAX) NOT NULL,
	DownloaderId int NOT NULL,
	ModuleId int NOT NULL,
	TimesDownloaded int NOT NULL,
	FirstDownload datetime NULL,
	LatestDownload datetime NULL,
	IsLegalDownload bit NULL,
	GameDevId int NOT NULL
	)  ON [PRIMARY]
	 TEXTIMAGE_ON [PRIMARY]

ALTER TABLE {databaseOwner}{objectQualifier}SGGameDownloads ADD CONSTRAINT
	PK_{objectQualifier}GameDownloads PRIMARY KEY CLUSTERED 
	(
	DownloadId
	) WITH( STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
END
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_AddGame') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_AddGame
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_AddGame

@GameName nvarchar (max)
, @GameDescription nvarchar (max)
, @DeveloperId int
, @ModuleId int
, @CreatedOnDate datetime
, @CreatedByUserID int
, @AgeRating int
, @GameGenre nvarchar (max)
, @MoreInfo nvarchar (max)
, @ImageFileName nvarchar (max)
, @InstallerFileName nvarchar (max)
, @PayPal nvarchar (max)

AS
INSERT INTO {databaseOwner}[{objectQualifier}SGGameDistribution_Game]
			([GameName]
			,[GameDescription]
			,[DeveloperId]
			,[ModuleId]
			,[CreatedOnDate]
			,[ContentItemId]
			,[CreatedByUserID]
			,[LastModifiedOnDate]
			,[LastModifiedByUserId]
			,[AgeRating]
			,[GameGenre]
			,[MoreInfo]
			,[ImageFileName]
			,[InstallerFileName]
			,[PayPal])
	VALUES
		(@GameName
			, @GameDescription
			, @DeveloperId
			, @ModuleId
			, @CreatedOnDate
			, -1 --TODO: Update ContentItemId Handling
			, @CreatedByUserID
			, GETDATE()
			, @CreatedByUserID
			, @AgeRating
			, @GameGenre
			, @MoreInfo
			, @ImageFileName
			, @InstallerFileName
			, @PayPal
		)
--return the ID of the Game back so we can create a contentItemId
Select @@Identity
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_UpdateGame') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_UpdateGame
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_UpdateGame

@GameId int
, @GameName nvarchar (max)
, @GameDescription nvarchar (max)
, @DeveloperId int
, @ModuleId int
, @ContentItemId int
, @LastModifiedByUserId int
, @AgeRating int
, @GameGenre nvarchar (max)
, @MoreInfo nvarchar (max)
, @ImageFileName nvarchar (max)
, @InstallerFileName nvarchar (max)
, @PayPal nvarchar (max)

AS
UPDATE {databaseOwner}[{objectQualifier}SGGameDistribution_Game]
			Set
			GameName = @GameName
			, GameDescription = @GameDescription
			, DeveloperId = @DeveloperId
			, ModuleId = @ModuleId
			, ContentItemId = @ContentItemId
			, LastModifiedOnDate = GETDATE()
			, LastModifiedByUserId = @LastModifiedByUserId
			, AgeRating = @AgeRating
			, GameGenre = @GameGenre
			, MoreInfo = @MoreInfo
			, ImageFileName = @ImageFileName
			, InstallerFileName = @InstallerFileName
			, PayPal = @PayPal
WHERE
			GameId = @GameId
GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_DeleteGames') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_DeleteGames
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_DeleteGames
	@ModuleId int
AS
DELETE FROM
	{databaseOwner}{objectQualifier}SGGameDistribution_Game
WHERE ModuleId = @ModuleId
GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_DeleteGame') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_DeleteGame
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_DeleteGame
	@GameId int
AS
DELETE FROM
	{databaseOwner}{objectQualifier}SGGameDistribution_Game
WHERE GameId = @GameId
GO


IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_GetGame') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_GetGame
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_GetGame
	@GameId int
AS
SELECT
	g.GameId
	, g.ModuleId
	, g.GameName
	, g.GameDescription
	, g.DeveloperId
	, g.CreatedOnDate
	, g.CreatedByUserID
	, g.LastModifiedOnDate
	, g.LastModifiedByUserId
	, g.AgeRating
	, g.GameGenre
	, g.MoreInfo
	, g.ImageFileName
	, g.InstallerFileName
	, g.PayPal
	, CI.ContentItemID
	, CI.Content
	, CI.ContentTypeID
	, CI.TabID
	, CI.ContentKey
	, CI.Indexed
	, u.Username
FROM
	{databaseOwner}{objectQualifier}SGGameDistribution_Game g
	INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON g.ContentItemId = CI.ContentItemID
	INNER JOIN {databaseOwner}{objectQualifier}Users AS u ON g.DeveloperId = u.UserId 
WHERE
	g.GameId = @GameId
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_GetGames') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_GetGames
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_GetGames
	@ModuleId int
AS
SELECT
	g.GameId
	, g.ModuleId
	, g.GameName
	, g.GameDescription
	, g.DeveloperId
	, g.CreatedOnDate
	, g.CreatedByUserID
	, g.LastModifiedOnDate
	, g.LastModifiedByUserId
	, g.AgeRating
	, g.GameGenre
	, g.MoreInfo
	, g.ImageFileName
	, g.InstallerFileName
	, g.PayPal
	, CI.ContentItemID
	, CI.Content
	, CI.ContentTypeID
	, CI.TabID
	, CI.ContentKey
	, CI.Indexed
	, u.Username
FROM
	{databaseOwner}{objectQualifier}SGGameDistribution_Game g
	INNER JOIN {databaseOwner}{objectQualifier}ContentItems AS CI ON g.ContentItemId = CI.ContentItemID
	INNER JOIN {databaseOwner}{objectQualifier}Users AS u ON g.DeveloperId = u.UserId 
WHERE
	g.ModuleId = @ModuleId
GO




IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_AddDownload') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_AddDownload
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_AddDownload

@GameName nvarchar (max)
, @GameId int
, @GameDevId int
, @ModuleId int
, @DownloaderId int
, @IsLegalDownload bit

AS
INSERT INTO {databaseOwner}[{objectQualifier}SGGameDownloads]
			([GameId]
			,[GameName]
			,[DownloaderId]
			,[ModuleId]
			,[TimesDownloaded]
			,[FirstDownload]
			,[LatestDownload]
			,[IsLegalDownload]
			,[GameDevId])
	VALUES
		(@GameId
			, @GameName
			, @DownloaderId
			, @ModuleId
			, 1 --TODO: Ensure AddDownload Only Called Once further downloads should call UpdateDownload And Increment TimesDownloaded each time.
			, GETDATE() -- TODO: Again if only called once GETDATE() will work else need use - @CreatedOnDate
			, GETDATE()
			, @IsLegalDownload
			, @GameDevId
		)
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_UpdateDownload') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_UpdateDownload
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_UpdateDownload

@GameId int
, @DownloaderId int
, @IsLegalDownload bit

AS
UPDATE {databaseOwner}[{objectQualifier}SGGameDownloads]
			Set
			IsLegalDownload = @IsLegalDownload
			, LatestDownload = GETDATE()
			, TimesDownloaded = TimesDownloaded + 1
WHERE
			GameId = @GameId AND DownloaderId = @DownloaderId
GO

IF EXISTS (SELECT * FROM {databaseOwner}sysobjects WHERE id = object_id(N'{databaseOwner}{objectQualifier}SGGameDistribution_CheckForDownload') and OBJECTPROPERTY(id, N'IsProcedure')=1)
	DROP PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_CheckForDownload
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}SGGameDistribution_CheckForDownload

@GameId int
, @DownloaderId int

AS
SELECT 
	DownloaderId
FROM
	{databaseOwner}[{objectQualifier}SGGameDownloads]
WHERE
	GameId = @GameId AND DownloaderId = @DownloaderId
GO

/************************************************************/
/*****              SqlDataProvider                     *****/
/************************************************************/